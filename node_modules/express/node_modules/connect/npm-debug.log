info it worked if it ends with ok
verbose cli [ 'c:\\Program Files (x86)\\nodejs\\node.exe',
verbose cli   'c:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
verbose cli   'install',
verbose cli   'zlib' ]
info using npm@1.1.24
info using node@v0.6.19
verbose config file C:\Users\IATBFOREVER\.npmrc
verbose config file c:\Program Files (x86)\nodejs\etc\npmrc
verbose config file c:\Program Files (x86)\nodejs\node_modules\npm\npmrc
verbose caching d:\nodejs\code\Node.js 开发指南sources\sources\chap6\sec3\microblog\node_modules\express\node_modules\connect\package.json
verbose caching d:\nodejs\code\Node.js 开发指南sources\sources\chap6\sec3\microblog\node_modules\express\node_modules\connect\node_modules\formidable\package.json
verbose from cache d:\nodejs\code\Node.js 开发指南sources\sources\chap6\sec3\microblog\node_modules\express\node_modules\connect\package.json
verbose readDependencies: using package.json deps
verbose cache add [ 'zlib', null ]
silly cache add: name, spec, args [ undefined, 'zlib', [ 'zlib', null ] ]
verbose parsed url { pathname: 'zlib', path: 'zlib', href: 'zlib' }
verbose addNamed [ 'zlib', '' ]
verbose addNamed [ null, '' ]
silly name, range, hasData [ 'zlib', '', false ]
verbose raw, before any munging zlib
verbose url resolving [ 'https://registry.npmjs.org/', './zlib' ]
verbose url resolved https://registry.npmjs.org/zlib
verbose etag "W9Z4D5QLBIV3M0Q2N7O6AX6X"
http GET https://registry.npmjs.org/zlib
http 304 https://registry.npmjs.org/zlib
silly get cb [ 304,
silly get cb   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
silly get cb     etag: '"W9Z4D5QLBIV3M0Q2N7O6AX6X"',
silly get cb     date: 'Mon, 26 Nov 2012 13:09:39 GMT',
silly get cb     'content-length': '0' } ]
verbose etag zlib from cache
silly name, range, hasData 2 [ 'zlib', '', true ]
silly versions [ 'zlib',
silly versions   [ '1.0.0', '1.0.1', '1.0.2', '1.0.3', '1.0.4', '1.0.5' ] ]
verbose bin dist [ '0.6-ares1.7.5-DEV-evundefined-openssl0.9.8r-v83.6.6.25-win32-x64-6.1.7600',
verbose bin dist   { shasum: '6e7c972fc371c645a6afb03ab14769def114fcc0',
verbose bin dist     tarball: 'http://registry.npmjs.org/zlib/-/zlib-1.0.5.tgz' } ]
verbose has wscript [ undefined,
verbose has wscript   { file: 'G:\\IATBFOREVER\\AppData\\Roaming\\npm-cache\\zlib\\1.0.5\\package\\package.json',
verbose has wscript     gypfile: false,
verbose has wscript     contributors: false,
verbose has wscript     wscript: true,
verbose has wscript     serverjs: false } ]
verbose caching G:\IATBFOREVER\AppData\Roaming\npm-cache\zlib\1.0.5\package\package.json
verbose loadDefaults zlib@1.0.5
silly resolved [ { name: 'zlib',
silly resolved     description: 'Simple, synchronous deflate/inflate for buffers',
silly resolved     version: '1.0.5',
silly resolved     homepage: 'https://github.com/kkaefer/node-zlib',
silly resolved     author: { name: 'Konstantin Käfer', email: 'kkaefer@gmail.com' },
silly resolved     repository: { type: 'git', url: 'git://github.com/kkaefer/node-zlib.git' },
silly resolved     engines: { node: '>=0.2.0' },
silly resolved     licenses: [ { type: 'BSD' } ],
silly resolved     main: './lib/zlib',
silly resolved     _id: 'zlib@1.0.5',
silly resolved     scripts: { preinstall: 'node-waf clean || (exit 0); node-waf configure build' },
silly resolved     dependencies: {},
silly resolved     devDependencies: {},
silly resolved     optionalDependencies: {},
silly resolved     _engineSupported: true,
silly resolved     _npmVersion: '1.1.24',
silly resolved     _nodeVersion: 'v0.6.19',
silly resolved     _defaultsLoaded: true,
silly resolved     _from: 'zlib' } ]
info into d:\nodejs\code\Node.js 开发指南sources\sources\chap6\sec3\microblog\node_modules\express\node_modules\connect zlib@1.0.5
info installOne zlib@1.0.5
verbose from cache G:\IATBFOREVER\AppData\Roaming\npm-cache\zlib\1.0.5\package\package.json
info unbuild d:\nodejs\code\Node.js 开发指南sources\sources\chap6\sec3\microblog\node_modules\express\node_modules\connect\node_modules\zlib
verbose unpack G:\IATBFOREVER\AppData\Roaming\npm-cache\zlib\1.0.5\package.tgz
silly gunzTarPerm modes [ '755', '644' ]
silly extracting entry package.json
silly modified mode [ 'package.json', 438, 420 ]
silly extracting entry .npmignore
silly modified mode [ '.npmignore', 438, 420 ]
silly extracting entry README.md
silly modified mode [ 'README.md', 438, 420 ]
silly extracting entry LICENSE
silly modified mode [ 'LICENSE', 438, 420 ]
silly extracting entry index.js
silly modified mode [ 'index.js', 438, 420 ]
silly extracting entry configure
silly modified mode [ 'configure', 438, 420 ]
silly extracting entry lib/zlib.js
silly modified mode [ 'lib/zlib.js', 438, 420 ]
silly extracting entry wscript
silly modified mode [ 'wscript', 438, 420 ]
silly extracting entry src/node-zlib.cc
silly modified mode [ 'src/node-zlib.cc', 438, 420 ]
silly extracting entry test/deflate.test.js
silly modified mode [ 'test/deflate.test.js', 438, 420 ]
silly extracting entry test/inflate.test.js
silly modified mode [ 'test/inflate.test.js', 438, 420 ]
silly extracting entry Makefile
silly modified mode [ 'Makefile', 438, 420 ]
verbose has wscript [ undefined,
verbose has wscript   { file: 'd:\\nodejs\\code\\Node.js 开发指南sources\\sources\\chap6\\sec3\\microblog\\node_modules\\express\\node_modules\\connect\\node_modules\\zlib\\package.json',
verbose has wscript     gypfile: false,
verbose has wscript     contributors: false,
verbose has wscript     serverjs: false,
verbose has wscript     wscript: true } ]
verbose caching d:\nodejs\code\Node.js 开发指南sources\sources\chap6\sec3\microblog\node_modules\express\node_modules\connect\node_modules\zlib\package.json
verbose loadDefaults zlib@1.0.5
info preinstall zlib@1.0.5
verbose unsafe-perm in lifecycle true
silly exec cmd "/c" "node-waf clean || (exit 0); node-waf configure build"
silly spawning [ 'cmd',
silly spawning   [ '/c', 'node-waf clean || (exit 0); node-waf configure build' ],
silly spawning   'd:\\nodejs\\code\\Node.js 开发指南sources\\sources\\chap6\\sec3\\microblog\\node_modules\\express\\node_modules\\connect\\node_modules\\zlib' ]
info zlib@1.0.5 Failed to exec preinstall script
info unbuild d:\nodejs\code\Node.js 开发指南sources\sources\chap6\sec3\microblog\node_modules\express\node_modules\connect\node_modules\zlib
verbose from cache d:\nodejs\code\Node.js 开发指南sources\sources\chap6\sec3\microblog\node_modules\express\node_modules\connect\node_modules\zlib\package.json
info preuninstall zlib@1.0.5
info uninstall zlib@1.0.5
verbose unbuild zlib@1.0.5 [ true,
verbose unbuild zlib@1.0.5   'd:\\nodejs\\code\\Node.js 开发指南sources\\sources\\chap6\\sec3\\microblog\\node_modules\\express\\node_modules\\connect\\node_modules',
verbose unbuild zlib@1.0.5   'd:\\nodejs\\code\\Node.js 开发指南sources\\sources\\chap6\\sec3\\microblog\\node_modules\\express\\node_modules\\connect\\node_modules' ]
info postuninstall zlib@1.0.5
ERR! zlib@1.0.5 preinstall: `node-waf clean || (exit 0); node-waf configure build`
ERR! `cmd "/c" "node-waf clean || (exit 0); node-waf configure build"` failed with 1
ERR! 
ERR! Failed at the zlib@1.0.5 preinstall script.
ERR! This is most likely a problem with the zlib package,
ERR! not with npm itself.
ERR! Tell the author that this fails on your system:
ERR!     node-waf clean || (exit 0); node-waf configure build
ERR! You can get their info via:
ERR!     npm owner ls zlib
ERR! There is likely additional logging output above.
ERR! 
ERR! System Windows_NT 6.1.7600
ERR! command "c:\\Program Files (x86)\\nodejs\\node.exe" "c:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "install" "zlib"
ERR! cwd d:\nodejs\code\Node.js 开发指南sources\sources\chap6\sec3\microblog\node_modules\express\node_modules\connect
ERR! node -v v0.6.19
ERR! npm -v 1.1.24
ERR! code ELIFECYCLE
ERR! message zlib@1.0.5 preinstall: `node-waf clean || (exit 0); node-waf configure build`
ERR! message `cmd "/c" "node-waf clean || (exit 0); node-waf configure build"` failed with 1
ERR! errno {}
verbose exit [ 1, true ]
